#ifndef nj_api_h
#define nj_api_h

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

	/**
	* The Jit Context defines a container for the Jit machinery and
	* also acts as the repository of the compiled functions. The Jit
	* Context must be kept alive as long as any functions within it are
	* needed. Deleting the Jit Context will also delete all compiled
	* functions managed by the context.
	*/
	typedef struct nj_context *nj_contextref;

	/**
	* Creates a Jit Context. 
	*/
	extern nj_contextref nj_create_context();

	/**
	* Destroys the Jit Context. Note that all compiled functions
	* managed by this context will die at this point.
	*/
	extern void nj_destroy_context(nj_contextref);

	/**
	* A Function Builder is used to generate code for a single
	* C function equivalent. Once the code is generated by invoking
	* finalize on the builder, the builder itself can be destroyed as the
	* compiled function lives on in the associated Jit Context.
	*/
	typedef struct nj_function_builder *nj_function_builderref;

	/*
	* These types are used to define function argument
	* types. See nj_create_function_builder() below for further
	* notes.
	*/
	enum nj_value_kind {
		nj_valuekind_V = 0, // void 
		nj_valuekind_I = 1, // int32_t
		nj_valuekind_Q = 2, // uint64_t
		nj_valuekind_D = 3, // double
		nj_valuekind_F = 4, // single-precision float;
		nj_valuekind_P = 5, // pointer
	};

	/**
	* Creates a new function builder object. The builder is used to construct the
	* code that will go into one function. Once the function has been defined,
	* machine code is generated by calling finalize(). After the function is
	* compiled the builder object can be thrown away - the compiled function
	* will live as long as the owning Jit Context lives.
	*/
	extern nj_function_builderref nj_create_function_builder(
		nj_contextref context, const char *name, enum nj_value_kind return_type);

	/**
	* Destroys the function builder object. Note that this will not delete the
	* compiled function created using this builder - as the compiled function lives
	* in the owning Jit Context.
	*/
	extern void nj_destroy_function_builder(nj_function_builderref);

	/**
	* A value type
	*/
	typedef struct nj_value *nj_valueref;

	extern nj_valueref nj_imm32(nj_function_builderref fb, int32_t i);

	extern void nj_ret(nj_function_builderref fb, nj_valueref v);

	extern void *nj_finalize(nj_function_builderref fb);

#ifdef __cplusplus
}
#endif


#endif